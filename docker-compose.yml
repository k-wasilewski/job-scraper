version: "3.1"

services:
  mongodb:
    container_name: mongodb
    image: mongo:latest
    logging:
      driver: none
    ports:
      - "127.0.0.1:27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: sa
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: scraping_db
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  job-scraper-spring-server:
    container_name: job-scraper-spring-server
    image: job-scraper-spring-server:latest
    ports:
      - "127.0.0.1:8081:8081"
    depends_on:
      - mongodb
      - job-scraper-node-server
    stdin_open: true

  job-scraper-node-server:
    container_name: job-scraper-node-server
    image: job-scraper-node-server:latest
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - mongodb
    volumes:
      - ./screenshots:/usr/src/app/screenshots
    stdin_open: true

  job-scraper-next-client:
    container_name: job-scraper-next-client
    image: job-scraper-next-client:latest
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - job-scraper-spring-server
      - job-scraper-node-server
    stdin_open: true
# TODO: after deploying on RasPi, expose Jenkins with http://localhost.run/, configure a pipeline on GitHub merging, create a Jenkinsfile, add a GitHub webhook
  jenkins:
    container_name: jenkins
    image: liatrio/jenkins-alpine:latest
    logging:
      driver: none
    ports:
      - "127.0.0.1:8082:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
